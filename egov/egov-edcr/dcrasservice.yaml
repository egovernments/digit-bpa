openapi: 3.0.0
info:
  version: 1.0.0
  title: eDCR as service
  description: Service to scrutinize plan in dxf file format and generate report. Use the transaction number to track the status/retrieve saved information.
  contact:
    name: Egovernments Foundation
    email: contact@egovernments.org
servers:
  - url: https://egov-dcr-galaxy.egovernments.org/edcr
    description: Development server
    
paths:
  /rest/dcr/scrutinizeplan:
    post:
      summary: This API will scrutinize the building plan drawing(dxf) file send along and gives the plan scrutiny result as response along with a unique eDCR number on successful processing.
      requestBody:
        content:
          multipart/mixed:
            schema:
              $ref: '#/components/schemas/ScrutinizePlanReq'
            encoding:
              dxfFile:
                contentType: application/dxf
      responses:
        '200':
          description: Plan scrutanized successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScrutinizePlanResponse'
        '400':
          description: Invalid Input
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
      tags:
        - Scrutinize Plan

paths:
  /rest/dcr/scrutinize:
    post:
      summary: This API will scrutinize the building plan drawing(dxf) file send along and gives the plan scrutiny result as response along with a unique eDCR number on successful processing.
      requestBody:
        content:
          multipart/mixed:
            schema:
              $ref: '#/components/schemas/ScrutinizeReq'
            encoding:
              dxfFile:
                contentType: application/dxf
      responses:
        '200':
          description: Plan scrutanized successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScrutinizePlanResponse'
        '400':
          description: Invalid Input
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
      tags:
        - Scrutinize Plan
                
  /rest/dcr/scrutinydetails:
    post:
      summary:  This API is used to fetch the details of the plan that is already scrutinized in the system by providing a transaction number or a eDCR number.
      requestBody:
        description: Send the unique transaction number that was used for plan scrutiny or the system generated eDCR number that was received as part of the scrutiny response for getting the details of scrutiny.
        content:
          application/json:
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
      parameters:
        - name: tenantId
          in: query
          description: Unique identifier of the city/state for which the record belong to.
          required: true
          schema:
            type: string
        - name: edcrNumber
          in: query
          description: edcr Number that was generated by the system as part of plan scrutiny.
          required: false
          schema:
            type: string
        - name: transactionNumber
          in: query
          description: Transaction Number number that was orignially sent to the system along with the drawing for scrutiny.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully list the details of the plan scrutiny if the system can identify the plan as per the details send. In case where system does not find the scrutiny details based on the input send, it will send a message back as "Invalid Input- Record not found".
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScrutinizePlanResponse'
      tags:
        - Search Scrutiny Details
        
  /rest/dcr/extractplan:
    post:
      summary: This API will extract the dcr data.
      requestBody:
        content:
          multipart/mixed:
            schema:
              $ref: '#/components/schemas/ExtractPlanReq'
            encoding:
              dxfFile:
                contentType: application/dxf
      responses:
        '200':
          description: Plan extracted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtractPlanResponse'
        '400':
          description: Invalid Input
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
      tags:
        - Extract Plan

  /rest/dcr/occomparison:
    post:
      summary:  This API is used to generate occupancy cetificate comparison report.
      requestBody:
        description: Send the unique edcr number and ocDcr number for getting the comparison report.
        content:
          application/json:
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
      parameters:
        - name: tenantId
          in: query
          description: Unique identifier of the city/state for which the record belong to.
          required: true
          schema:
            type: string
        - name: edcrNumber
          in: query
          description: edcr Number that was generated by the system as part of plan scrutiny.
          required: true
          schema:
            type: string
        - name: ocdcrNumber
          in: query
          description: dcr Number that was generated by the system as part of oc plan scrutiny.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully get the comparison report.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComparisonResponse'
      tags:
        - Generate/Fetch comparison report
                
components:
  schemas:
    EdcrDetail:
      type: object
      description: EncrReqObject contains data to be encrypted and meta-data required to perform the encryption.
      properties:
        transactionNumber:
          type: string
          maxLength: 32
          description: Unique Transaction Number for each request.
        planDetail:
          $ref: '#/components/schemas/PlanDetail'
        edcrNumber:
          type: string
          maxLength: 32
          description: If the plan is approved, eDCR number will be generated by the system.
        planPdfs:
          type: array
          items:
            type: string
            format: url 
            description: System generated pdfs of the drawings(dxf) uploaded.
        dxfFile:
          type: string
          format: url
          description: Plan drawing file that is scrutinized which is of .dxf extension.
          maximum: 23333
        updatedDxfFile:
          type: string
          format: url
          description: System upgraded version of the uploaded dxf file.
          maximum: 23333
        planReport:
          type: string
          format: url
          description: System generated scrutiny report for the uploaded drawing(dxf). This will be a pdf file 
        status:
          type: string
          description: Status of the plan after the scrutiny process. If all the rules are passed the status will be "Accepted". If one of the rules is failed the status will be "Not Accepted".If there is issue in reading drawing or drawing not defined in standard format, then status will be "Aborted"
          enum:
            - Accepted
            - Not Accepted
            - Aborted
        permitNumber:
          type: string
          maxLength: 32
          description: Permit number.
        permitDate:
          type: integer
          format: int64
          x-displayformat: 'dd/MM/yyyy'
          description: Plan permit date of application  
        appliactionType:
          type: string
          maxLength: 32
          description: Application Type of application.
        applicationSubType:
          type: string
          maxLength: 32
          description: Service Type of application.      
        tenantId:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId'

    ComparisonDetail:
      type: object
      description: Contains data of the comparison.
      properties:
        edcrNumber:
          type: string
          maxLength: 32
          description: eDcr number passed to the system to generate comparison report.
        ocdcrNumber:
          type: string
          maxLength: 32
          description: ocDcr number passed to the system to generate comparison report.
        comparisonReport:
          type: string
          format: url
          description: System generated comparison report. This will be a pdf file
        status:
          type: string
          maxLength: 32
          description: status of comparison report.               
        tenantId:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId'

    ScrutinizePlanReq:
      type: object
      description: This object contains data to be submitted for scrutanizing a plan drawing.
      properties:
        tenantId:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId'
        applicantName:
          type: string
        transactionNumber:
          type: string
          maxLength: 32
          description: Unique Transaction Number for each request.
        appliactionType:
          type: string
          maxLength: 32
          description: Application type 
        applicationSubType:
          type: string
          maxLength: 32
          description: Service type   
        requestInfo:
          $ref: '#/components/schemas/RequestInfo'
        dxfFile:
          type: string
          x-mimetype: application/dxf
          description: The builing plan drawing file, in .dxf format, which needs to be scrutinized.
        permitNumber:
          type: string
          maxLength: 32
          description: Permit number.
        permitDate:
          type: integer
          format: int64
          x-displayformat: 'dd/MM/yyyy'
          description: Plan permit date of application   
      example:
        tenantId: sonpur
        transactionNumber: '1'
        requestInfo: {}
        dxfFile: ''
        appliactionType: 'BUILDING_PLAN_SCRUTINY'
        applicationSubType: 'NEW_CONSTRUCTION'
      required:
        - tenantId
        - transactionNumber
        - dxfFile
        - appliactionType
        - applicationSubType
                
    ScrutinizePlanResponse:
      description: This object contains the response of a file scrutiny along with all the reports and status. 
      properties:
        responseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        edcrDetail:
          description: Used for search result and create only
          type: array
          items:
            $ref: '#/components/schemas/EdcrDetail'
        
    ComparisonResponse:
      description: This object contains the response comparison. 
      properties:
        responseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        comparisonDetail:
          description: Used to generate or fetch comparison report
          type: Object
          items:
            $ref: '#/components/schemas/ComparisonDetail'
                        
    planInformation:
      type: object
      description: Planinformation captures the declarations of the plan.Plan information captures the boundary, building location details,surrounding building NOC's etc. User will assert the details about the plot. The same will be used to print in plan report.
      properties:
        ownerName:
          type: string
          maxLength: 32
          description: Temporary field used to capture Owner Name
        plotArea:
          type: number
        occupancy:
          type: string
          maxLength: 32
          description: Temporary field used to auto populate occupancy detail
        serviceType:
          type: string
          maxLength: 32
          description: Temporary field used for service type.
        amenities: 
          type: string
          maxLength: 32
          description: Temporary field used to show amenities used in application.
        architectInformation: 
          type: string
          maxLength: 32
          description: Save architect who submitted application mentioned in plan info.
        applicantName:  
          type: string
          maxLength: 32
          description: Applicant Name
        crzZoneArea:  
          type: boolean
          description: Extracted from Plan info. Whether plot present in CRZ zone. Expecting default value as NO. 
        demolitionArea:
          type: number
          description: Extracted from Plan info. Demolition area to be mentioned in the plan info
        depthCutting:
          type: string
          maxLength: 3
          description: YES/NO/NA. Extracted from Plan info. Depth cutting more than 1.5 Meter flag. 
        governmentOrAidedSchool:
          type: string
          maxLength: 3
          description:  YES/NO/NA.Extracted from Plan info. Is building of type government or aided school.
        securityZone:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Is plot comes under security zone flag.
        accessWidth:
          type: number
          description: Extracted from Plan info.  Access width to the plot.
        noOfBeds:
          type: number
          description: Extracted from Plan info.  In case of medical occupancy, capture number of beds present in the building. Sanitation details are decided based on number of beds present.
        nocToAbutSideDesc:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. NOC received from the side owner
        nocToAbutRearDesc:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. NOC received from the rear owner.
        openingOnSide:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Any opening on sides of building.
        openingOnRear:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Any opening on rear side of building.
        noOfSeats:
          type: number
          description: Extracted from Plan info. Number of seats present in special occupancy 
        noOfMechanicalParking:
          type: number
          description: Extracted from Plan info. Number of mechanical parking declared in the plan
        singleFamilyBuilding:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info.Is plan belongs to single family building. There are few rules relaxed for single family building 
        reSurveyNo:
          type: string
          maxLength: 32
          description: Extracted from Plan info. Revenue survey number declared in the plan
        revenueWard:
          type: string
          maxLength: 32
          description: Extracted from Plan info. Revenue ward name declared in the plan
        desam:
          type: string
          maxLength: 32
          description: Extracted from Plan info. Desam name declared in the plan
        village:
          type: string
          maxLength: 32
          description: Extracted from Plan info. Village name declared in the plan
        landUseZone:
          type: string
          maxLength: 32
          description: Extracted from Plan info. Land Use zone. The value should be standard like RESIDENTIAL,COMMERCIAL,INDUSTRIAL,PUBLICANDSEMIPUBLIC etc.
        leaseHoldLand:
          type: string
          maxLength: 32
          description: YES/NO/NA. Extracted from Plan info. Is lease hold land
        roadWidth:
          type: number
          description: Extracted from Plan info. Road width declared in the plan.
        roadLength:
          type: number
          description: Extracted from Plan info. Road length declared in the plan.
        typeOfArea:
          type: string
          maxLength: 32
          description: Extracted from Plan info. Type of area. Whether old or new area.
        depthOfPlot:
          type: number
          description: Extracted from Plan info. Average plot depth.
        widthOfPlot:
          type: number
          description: Extracted from Plan info. Average plot width
        buildingNearMonument:
          type: string
          maxLength: 3
          description: YES/NO/NA. Extracted from Plan info. Is building near to monument.
        buildingNearGovtBuilding:
          type: string
          maxLength: 3 
          description: YES/NO/NA.Extracted from Plan info. Is building near to government building
        nocNearMonument: 
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Building near monument and permitted with NOC
        nocNearAirport:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Building near airport and permitted with airport authority
        nocNearDefenceAerodomes:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Building near defence aerodrome and permitted with NOC
        nocStateEnvImpact:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Permitted with state Environmental impact assessment study report
        nocRailways:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Permitted with railway NOC
        nocCollectorGvtLand:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Permitted with noc issued by collector on govt. land
        nocIrrigationDept:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Permitted with irrigation report NOC
        nocFireDept:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Permitted with fire department NOC
        buildingNearToRiver:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Building near the river flag
        barrierFreeAccessForPhyChlngdPpl:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Barrier free access for physically handicapped person provided.
        provisionsForGreenBuildingsAndSustainability:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Provision for green building and sustainability provided in plan.Rainwater harvesting,solar,segregation of waste etc.
        fireProtectionAndFireSafetyRequirements:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Fire Protection And Fire Safety Requirements declared in the plan.
        plotNo:
          type: string
          maxLength: 32
          description: Extracted from Plan info.Plot number
        khataNo:
          type: string
          maxLength: 32
          description: Extracted from Plan info.Khata number.
        mauza:
          type: string
          maxLength: 32
          description: Extracted from Plan info.Mauza number.
        district:
          type: string
          maxLength: 32
          description: Extracted from Plan info.District name
        rwhDeclared:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Rain water declared in plan
    Yard: 
      type: object
      description: Plot and Set back details.
      allOf:     # Combines the plot and measurement model
        - $ref: '#/components/schemas/Measurement'
      properties:
        level:
          type: number
          format : int32
          description: Each yard can at different level eg.Level 0 is considered ground Level -1 is basement. Based on type of building, levels used to define yards. The set of floors of similar shapre group under single level.
        dimensions:
          type:  array
          items:
            type: number
          description: Different dimensions defined in the plan
    SetBack: 
      type: object
      description: Set back details.
      properties:
        frontYard:
          $ref: '#/components/schemas/Yard'   
          description: Front setback defined the plan
        rearYard:
          $ref: '#/components/schemas/Yard'             
          description: Rear setback defined the plan
        sideYard1:
          $ref: '#/components/schemas/Yard'   
          description: one side setback defined the plan
        sideYard2:
          $ref: '#/components/schemas/Yard'             
          description: another side setback defined the plan  
        level:
          type: number
          format : int32
          description: setback defined for each level.  
        buildingFootPrint:
          $ref: '#/components/schemas/Measurement'
    Plot: 
      type: object
      description: Plot and Set back details.
      allOf:     # Combines the plot and measurement model
        - $ref: '#/components/schemas/Measurement'
      properties:
        name:
          type: string
          maxLength: 32
          description: name of measurement field         
        frontYard:
          $ref: '#/components/schemas/Yard'   
          description: Front setback defined the plan
        rearYard:
          $ref: '#/components/schemas/Yard'             
          description: Rear setback defined the plan
        sideYard1:
          $ref: '#/components/schemas/Yard'   
          description: one side setback defined the plan
        sideYard2:
          $ref: '#/components/schemas/Yard'             
          description: another side setback defined the plan  
        setBacks:
          type:  array
          items:
            $ref: '#/components/schemas/SetBack'  
        buildingFootPrint:
          $ref: '#/components/schemas/Measurement'    
        bsmtFrontYard:
          $ref: '#/components/schemas/Yard'   
          description: Basement Front setback defined the plan
        bsmtRearYard:
          $ref: '#/components/schemas/Yard'             
          description: Basement Rear setback defined the plan
        bsmtSideYard1:
          $ref: '#/components/schemas/Yard'   
          description: Basement one side setback defined the plan
        bsmtSideYard2:
          $ref: '#/components/schemas/Yard'             
          description: Basement another side setback defined the plan 
        plotBndryArea:
          type: number
          format: double
          description: Plot boundary area
        smallPlot:
          type: boolean
          description: Small plot condition check flag          
    Measurement: 
      type: object
      description: Common object used to save measurement detail.
      properties:
        name:
          type: string
          maxLength: 32
          description: name of measurement field 
        presentInDxf:
          type: string
          description: boolean to check whether defined in dxf file 
        minimumDistance:
          type: number
          format: double
          description: Minimum distance 
        minimumSide: 
          type: number
          format: double
          description: Minimum side distance 
        length: 
          type: number
          format: double
          description: length of measurement   
        width: 
          type: number
          format: double
          description: width of measurement    
        height: 
          type: number
          format: double
          description: height of measurement  
        mean: 
          type: number
          format: double
          description: mean area               
        area: 
          type: number
          format: double
          description: area of measurement
        colorCode: 
          type: number
          format: int32
          description: color code 
        isValid: 
          type: boolean
          description: is valid flag. Use if required.            
      
    AccessoryBuilding:
      type: object
      description: Accessory buildings are outdoor structures such as attached or detached garages, sheds, playhouses, storage buildings, pergolas, garden structures, greenhouses, private studios, boathouses, pool houses, cabanas, and other similar residential buildings.
      allOf:     # Combines the plot and measurement model
        - $ref: '#/components/schemas/Measurement'
      properties:
        number:
          type: string
          maxLength: 32
          description: Block number
        distanceFromPlotBoundary:
          type:  array
          items:
            type: number
    
    AccessoryBlock: 
      type: object
      description: Accessory blocks are outdoor building which present with residential buildings used like attached garage, storage etc.
      allOf:     # Combines the plot and measurement model
        - $ref: '#/components/schemas/Measurement'
      properties:
        number:
          type: string
          maxLength: 32
          description: Block number
        accessoryBuilding:
          $ref: '#/components/schemas/AccessoryBuilding'   
        measurements:
          type:  array
          items:
            $ref: '#/components/schemas/Measurement'
    Block: 
      type: object
      description: Single plan contain multiple block/building information. Records Existing and proposed block information.  
      allOf:     
        - $ref: '#/components/schemas/Measurement'
      properties:
        name:
          type: string
          maxLength: 32
          description: Block name
        number:
          type: string
          maxLength: 32
          description: Block number
        numberOfLifts:
          type: string
          maxLength: 32
          description: Number of lifts present in block         
        building:
          $ref: '#/components/schemas/Building'  
        setBacks:
          type:  array
          items:
            $ref: '#/components/schemas/SetBack'          
        coverage:
          type:  array
          items:
            $ref: '#/components/schemas/Measurement'
        coverageDeductions:
          type:  array
          items:
            $ref: '#/components/schemas/Measurement'
        typicalFloor:
          type:  array
          items:
            $ref: '#/components/schemas/TypicalFloor'    
        disBetweenBlocks:
          type:  array
          items:
            $ref: '#/components/schemas/BlockDistances'   
        hallAreas:
          type:  array
          items:
            $ref: '#/components/schemas/Hall'               
        diningSpaces:
          type:  array
          items:
            $ref: '#/components/schemas/Measurement'          
        sanityDetails:
          $ref: '#/components/schemas/SanityDetails'           
        singleFamilyBuilding:  
          type: boolean
          description: Single family flag.
        residentialBuilding:  
          type: boolean
          description: Residential building flag. Default value false   
        residentialOrCommercialBuilding:  
          type: boolean
          description: Residential or commercial building flag. Default value false   
        highRiseBuilding:  
          type: boolean
          description: High rise building flag. Default value false   
        completelyExisting:  
          type: boolean
          description: Completely existing building flag. Default value false           
        daRamps:
          type:  array
          items:
            $ref: '#/components/schemas/DARamp'     
        openStairs:
          type:  array
          items:
            $ref: '#/components/schemas/Measurement'       
        protectedBalconies:
          type:  array
          items:
            $ref: '#/components/schemas/Measurement'       
        plantationGreenStripes:
          type:  array
          items:
            $ref: '#/components/schemas/Measurement'                   
        plinthHeight:
          type:  array
          items:
            type: number
          description: plint heights
        interiorCourtYard:
          type:  array
          items:
            type: number
          description: Interior court yard details       
        roofTanks:
          type:  array
          items:
            type: number
          description: Roof tanks dimensions in meter
        stairCovers:
          type:  array
          items:
            type: number
          description: Stair covers  dimensions in meter    
        chimneys:
          type:  array
          items:
            type: number
          description: Chimneys dimensions in meter
        parapets:
          type:  array
          items:
            type: number
          description: parapet  dimensions in meter         
        fireTenderMovement:
          $ref: '#/components/schemas/FireTenderMovement'           
    TypicalFloor:
      type: object
      description: Typical floor case handle using this object 
      properties:
        modelFloorNo:
          type: number
          description: Model floor number. 
        repetitiveFloorNos:
          type:  array
          items:
            type: number
    BlockDistances:
      type: object
      description: Block distances 
      properties:
        blockNumber:
          type: string
          description: Block number. 
        distances:
          type:  array
          items:
            type: number
    Hall:
      type: object
      allOf:     
        - $ref: '#/components/schemas/Measurement'      
      description: Hall details required in commercial cases
      properties:
        number:
          type: string
          description: Hall number. 
        builtUpArea:
          type: number
          format: double
          description: Build up area of a hall. 
        deductions:
          type: number
          format : double
          description: buildup area deductions

    SanityDetails: 
      type: object
      description: Sanitary details
      properties:
        totalSPWC:
          type: number
          format: int32
          description: Total Special water closets
        totalwashBasins:
          type: number
          format : int32
          description: Total wash basins      
        maleWaterClosets:
          type:  array
          items:
            $ref: '#/components/schemas/Measurement'       
        femaleWaterClosets:
          type:  array
          items:
            $ref: '#/components/schemas/Measurement'       
        commonWaterClosets:
          type:  array
          items:
            $ref: '#/components/schemas/Measurement'       
        urinals:
          type:  array
          items:
            $ref: '#/components/schemas/Measurement'       
        maleBathRooms:
          type:  array
          items:
            $ref: '#/components/schemas/Measurement'       
        femaleBathRooms:
          type:  array
          items:
            $ref: '#/components/schemas/Measurement'       
        commonBathRooms:
          type:  array
          items:
            $ref: '#/components/schemas/Measurement'       
        maleRoomsWithWaterCloset:
          type:  array
          items:
            $ref: '#/components/schemas/Measurement'       
        femaleRoomsWithWaterCloset:
          type:  array
          items:
            $ref: '#/components/schemas/Measurement'       
        commonRoomsWithWaterCloset:
          type:  array
          items:
            $ref: '#/components/schemas/Measurement'       
        drinkingWater:
          type:  array
          items:
            $ref: '#/components/schemas/Measurement'       
        totalSpecialWC:
          type:  array
          items:
            $ref: '#/components/schemas/Measurement'       
    DARamp: 
      type: object
      description: Disabled facility ramp details
      allOf:     
        - $ref: '#/components/schemas/Measurement'
      properties:
        number:
          type: number
          format: int32
          description: Ramp number
        slope:
          type: number
          format: double
          description: Slope number
        measurements:
          type:  array
          items:
            $ref: '#/components/schemas/Measurement'
    FireTenderMovement: 
      type: object
      description: Fire tender movement
      properties:
        errors:
          type:  array
          items:
            type: string
        fireTenderMovements:
          type:  array
          items:
            $ref: '#/components/schemas/Measurement'
    Building: 
      type: object
      description: Building details
      allOf:     
        - $ref: '#/components/schemas/Measurement'
      properties:
        buildingHeight:
          type: number
          format: double
          description: building height as per measurement
        declaredBuildingHeight:
          type: number
          format: double
          description: building height as per declared in planinfo
        heightIncreasedBy:
          type: string
          description: Flag used to check whether height increased by chimney,roof tank or stair cover calculation
        buildingTopMostHeight:
          type: number
          format: double
          description: building height to topmost level
        totalFloorArea:
          type: number
          format: double
          description: Total floor area 
        totalExistingFloorArea:
          type: number
          format: double
          description: Total existing building floor area
        far:
          type: number
          format: double
          description: FSI area
        coverage:
          type: number
          format: double
          description: Coverage in percentage
        coverageArea:
          type: number
          format: double
          description:  Coverage area
        maxFloor:
          type: number
          format: double
          description:  Maximum floor
        totalFloors:
          type: number
          format: double
          description: Total floors   
        floorsAboveGround:
          type: number
          format: double
          description: Floor above ground
        exteriorWall:
          $ref: '#/components/schemas/Measurement'   
        shade:
          $ref: '#/components/schemas/Measurement' 
        floors:
          type:  array
          items:
            $ref: '#/components/schemas/Floor'          
        distanceFromBuildingFootPrintToRoadEnd:
          type:  array
          items:
            type:  number
        distanceFromSetBackToBuildingLine:
          type:  array
          items:
            type:  number
        totalBuitUpArea:
          type: number
          format: double
          description: Total build up area   
        totalExistingBuiltUpArea:
          type: number
          format: double
          description: Total existing build up area   
        mostRestrictiveOccupancy:
          $ref: '#/components/schemas/OccupancyType'               
        mostRestrictiveOccupancyType:
          $ref: '#/components/schemas/OccupancyType'          
        mostRestrictiveFarHelper:
          $ref: '#/components/schemas/OccupancyTypeHelper'       
        occupancies:
          type:  array
          items:
            $ref: '#/components/schemas/Occupancy'   
          description: The list of occupancies present in the building. The occupancies are grouped by combining with different floor/ conversion logic.           
        totalArea:
          type:  array
          items:
            $ref: '#/components/schemas/Occupancy'
          description: This would be plain sum of occupancies without converting. Occupancies as declared in plan   
        isHighRise:
          type: boolean
          description: Flag used to check high rise building
        passage:
          $ref: '#/components/schemas/Passage'      
        headRoom:
          $ref: '#/components/schemas/HeadRoom'                
    Passage:
      type: object
      description: Passage details in the building
      allOf:     
        - $ref: '#/components/schemas/Measurement'
      properties:
        passageDimensions:
          type:  array
          items:
            type:  number
        passageStairDimensions:
          type:  array
          items:
            type:  number            
    HeadRoom:
      type: object
      description: Head room details of the building      
      allOf:     
        - $ref: '#/components/schemas/Measurement'
      properties:
        headRoomDimensions:
          type:  array
          items:
            type:  number      
    OccupancyType:
      type: object
      description: Electric lines which are passed through plot
      properties:
        occupancyTypeVal:
          type:  string
          description: List of occupancies defined    

    OccupancyTypeHelper:
      type: object
      description: Electric lines which are passed through plot
    Floor: 
      type: object
      description: Electric lines which are passed through plot
      allOf:     
        - $ref: '#/components/schemas/Measurement'
      properties:
        units:
          type:  array
          items:
            $ref: '#/components/schemas/FloorUnit'     
        daRooms:
          type:  array
          items:
            $ref: '#/components/schemas/DARoom'     
        vehicleRamps:
          type:  array
          items:
            $ref: '#/components/schemas/VehicleRamp'    
        ramps:
          type:  array
          items:
            $ref: '#/components/schemas/Ramp'  
        lifts:
          type:  array
          items:
            $ref: '#/components/schemas/Lift' 
        daLifts:
          type:  array
          items:
            $ref: '#/components/schemas/Lift'  
        exterior:    
          $ref: '#/components/schemas/Measurement'  
        parking:    
          $ref: '#/components/schemas/ParkingDetails'            
        specialWaterClosets:
          type:  array
          items:
            $ref: '#/components/schemas/Measurement'    
        coverageDeduct:
          type:  array
          items:
            $ref: '#/components/schemas/Measurement'   
        name:
          type: string
          description: Floor name.       
        number:
          type: string
          description: Floor number.                 
        occupancies:
          type:  array
          items:
            $ref: '#/components/schemas/Occupancy'   
        mezzanineFloor:
          type:  array
          items:
            $ref: '#/components/schemas/MezzanineFloor'               
        exitWidthDoor:
          type:  array
          items:
            type:  number
        exitWidthStair:
          type:  array
          items:
            type:  number
        halls:
          type:  array
          items:
            $ref: '#/components/schemas/Hall'              
        convertedOccupancies:
          type:  array
          items:
            $ref: '#/components/schemas/Occupancy' 
        generalStairs:
          type:  array
          items:
            $ref: '#/components/schemas/GeneralStair'  
        fireStairs:
          type:  array
          items:
            $ref: '#/components/schemas/FireStair'  
        spiralStairs:
          type:  array
          items:
            $ref: '#/components/schemas/SpiralStair'  
        acRoom:
            $ref: '#/components/schemas/Room'  
        regularRoom:
            $ref: '#/components/schemas/Room'              
        kitchen:
            $ref: '#/components/schemas/Room'               
        bathRoom:
            $ref: '#/components/schemas/Room'                
        waterClosets:
            $ref: '#/components/schemas/Room'                
        bathRoomWaterClosets:
            $ref: '#/components/schemas/Room'   
        heightFromTheFloorToCeiling:
          type:  array
          items:
            type: number
        heightOfTheCeilingOfUpperBasement:
          type:  array
          items:
            type: number
        interiorOpenSpace:
            $ref: '#/components/schemas/InteriorOpenSpace'                           
        verandah:
            $ref: '#/components/schemas/MeasurementWithHeight'   
        lightAndVentilation:
            $ref: '#/components/schemas/MeasurementWithHeight'   
        balconies:
          type:  array
          items:
            $ref: '#/components/schemas/Balcony'  
        overHangs:
          type:  array
          items:
            $ref: '#/components/schemas/Measurement'              
        floorHeights:
          type:  array
          items:
            type:  number
    Balcony:
      type: object
      description: Balcony detail           
    MeasurementWithHeight:
      type: object
      description: Measurement with height detail   
    InteriorOpenSpace:
      type: object
      description: Interior open space object     
    Room:
      type: object
      description: Room object          
    MezzanineFloor:
      type: object
      description: Mezzanine floor detail
    ParkingDetails:   
      type: object
      description: Parking detail
    GeneralStair:   
      type: object
      description: General stair detail
    FireStair:   
      type: object
      description: Fire stair detail
    SpiralStair:   
      type: object
      description: Spiral stair detail      
    FloorUnit:   
      type: object
      description: Number of units present in each floor. Used in apartment, lodge etc use cases.
    DARoom:   
      type: object
      description: DA Rooms
    Lift:   
      type: object
      description: Lift details

    VehicleRamp:
      type: object
      description: Vehicle ramp details    
    Ramp:   
      type: object
      description: Ramps details    
    virtualBuilding: 
      type: object
      description: Temporary building object used to validate rules based on overall plot/buildings details. Example Total buildup area of all the blocks, Unique occupancies present in this plot etc.      
    electricLine: 
      type: object
      description: Electric lines which are passed through plot
    nonNotifiedRoad:  
      type: object
      description: Non notified road like municipal road etc which are present next to plot
    notifiedRoad:  
      type: object
      description: Notified road like highway road etc which are present next to plot
    culdeSacRoad:  
      type: object
      description: Irregular shape roads which are present next to plot
    laneRoad:  
      type: object
      description: Lane road which are present next to plot
    parkingDetails:  
      type: object
      description: Parking facilities provided in the plot. Includes visitor, two wheeler, four wheeler etc
    Occupancy:  
      type: object
      description: List of occupancies present in the plot inclusive of all the blocks.
    utility:  
      type: object
      description: Utilities of building like solar,waste disposal plant, watertank, rain water harvesting etc
    farDetails:  
      type: object
      description: Calculated Permissible FSI and provided FSI details
    drawingPreference:  
      type: object
      description: Drawing standard parameters required to process dxf file    
    septicTank:  
      type: object
      description: List of Septic tanks defined in the plan
    plantation:  
      type: object
      description: Trees and plant defined in the plan
    guardRoom:  
      type: object
      description: Guard room details
    segregatedToilet:  
      type: object
      description: Segregated toilet facilities for visitors in Public Buildings (within the premises of the building, but outside the building block)      
    distanceToExternalEntity:  
      type: object
      description: Distance of plot with external entities like rive, lake, monuments, government building etc are grouped    
    measurement:  
      type: object
      description: Common object used to capture length,width,height,mean etc
    reportOutput:  
      type: object
      description: The report output object. Based on type of building and occupancies,the rules are validated and rules which are considered for the submitted plan are recorded in this object             
    
    PlanDetail:
      type: object
      description: All the details extracted from the plan are referred in this object
      properties:
        edcrPassed:
          type: boolean
          description: Plan scrutiny report status. Values true mean "Accepted" and False mean "Not Accepted". Default value false. On plan scrutiny, if all the rules are success then value is true. 
        applicationDate:
          type: integer
          format: int64
          x-displayformat: 'dd/MM/yyyy'
          description: Submission date of plan scrutiny
        planInformation:
          $ref: '#/components/schemas/planInformation'  
        plot:
          $ref: '#/components/schemas/Plot'    
        block:
          type:  array
          items:
            $ref: '#/components/schemas/Block'  
        accessoryBlocks:
          type:  array
          items:
            $ref: '#/components/schemas/AccessoryBlock'    
        virtualBuilding:   
          $ref: '#/components/schemas/virtualBuilding'    
        electricLine:
          type:  array
          items:
            $ref: '#/components/schemas/electricLine'   
        nonNotifiedRoads:
          type:  array
          items:
            $ref: '#/components/schemas/nonNotifiedRoad'   
        notifiedRoads:
          type:  array
          items:
            $ref: '#/components/schemas/notifiedRoad' 
        culdeSacRoads:
          type:  array
          items:
            $ref: '#/components/schemas/culdeSacRoad' 
        laneRoads:
          type:  array
          items:
            $ref: '#/components/schemas/laneRoad'     
        travelDistancesToExit:
          type:  array
          items:
            type: number
          description: Travel distance to exit from the buildings
        parkingDetails:  
          type:  array
          items:
            $ref: '#/components/schemas/parkingDetails' 
        canopyDistanceFromPlotBoundary:
          type:  array
          items:
            type: number
          description: If canopy present, capture distance from the plot boundary  to canopy.   
        occupancies:
          type:  array
          items:
            $ref: '#/components/schemas/Occupancy'  
        utility:
          $ref: '#/components/schemas/utility'   
        coverage:
          type: number
          format: BigDecimal
          description: coverage Overall Coverage of all the block. Total area of all the floor/plot area.
        farDetails:
          $ref: '#/components/schemas/farDetails'   
        drawingPreference:
          $ref: '#/components/schemas/drawingPreference'     
        septicTank:
          type:  array
          items:
            $ref: '#/components/schemas/septicTank'    
        plantation:
          $ref: '#/components/schemas/plantation'   
        guardRoom:
          $ref: '#/components/schemas/guardRoom'             
        segregatedToilet:
          $ref: '#/components/schemas/segregatedToilet'  
        surrenderRoads:
          type:  array
          items:
            $ref: '#/components/schemas/measurement'  
          description: surrendered roads with width detail
        totalSurrenderRoadArea:
          type: number
          format: BigDecimal
          description: For proposed road widening, surrendered road area.This area will be used to calculate FAR,setback and permissible buildup area  
        distanceToExternalEntity:
          $ref: '#/components/schemas/distanceToExternalEntity'            
        errors:
          type: array
          items:
            type: array
            items:
              type: string
          description: Used to show drawing mistakes, General errors, mistakes in following layer/color coding standard etc        
        reportOutput:
          $ref: '#/components/schemas/reportOutput'           
        noObjectionCertificates:
          type: array
          items:
            type: array
            items:
              type: string
          description: System will evaluate the list of noc's required based on the plan input
          
    ExtractPlanReq:
      type: object
      description: This object contains data to be submitted for extracting a plan drawing.
      properties:
        tenantId:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId'
        applicantName:
          type: string
        requestInfo:
          $ref: '#/components/schemas/RequestInfo'
        dxfFile:
          type: string
          x-mimetype: application/dxf
          description: The builing plan drawing file, in .dxf format, which needs to be scrutinized.
      example:
        tenantId: sonpur
        transactionNumber: '1'
        requestInfo: {}
        dxfFile: ''
      required:
        - tenantId
        - dxfFile          
            
    ExtractPlanResponse:
      description: This object contains the response of a file scrutiny along with all the reports and status. 
      properties:
        responseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        planDetail:
          type: string
          description: Data extracted from drawing in json
          
    RequestInfo:
      type: object
      description: RequestInfo should be used to carry meta information about the requests to the server as described in the fields below. All eGov APIs will use requestinfo as a part of the request body to carry this meta information. Some of this information will be returned back from the server as part of the ResponseInfo in the response body to ensure correlation.
      properties:
        apiId:
          type: string
          description: unique API ID
          maxLength: 128
        ver:
          type: string
          description: API version - for HTTP based request this will be same as used in path
          maxLength: 32
        ts:
          type: integer
          format: int64
          description: time in epoch
        action:
          type: string
          description: API action to be performed like _create, _update, _search (denoting POST, PUT, GET) or _oauth etc
          maxLength: 32
        did:
          type: string
          description: Device ID from which the API is called
          maxLength: 1024
        key:
          type: string
          description: API key (API key provided to the caller in case of server to server communication)
          maxLength: 256
        msgId:
          type: string
          description: Unique request message id from the caller
          maxLength: 256
        requesterId:
          type: string
          description: UserId of the user calling
          maxLength: 256
        authToken:
          type: string
          description: //session/jwt/saml token/oauth token - the usual value that would go into HTTP bearer token
        userInfo:
          $ref: '#/components/schemas/UserInfo'
        correlationId:
          type: string
          readOnly: true
      required:
        - apiId
        - ver
        - ts
        - msgId
        - action      
          
    UserInfo:
      type: object
      description: This is acting ID token of the authenticated user on the server. Any value provided by the clients will be ignored and actual user based on authtoken will be used on the server. 
      readOnly: true
      properties:
        tenantId:
          type: string
          description: Unique Identifier of the tenant to which user primarily belongs
        uuid: 
          type: string
          description: System Generated User id of the authenticated user.
        userName: 
          type: string
          description: Unique user name of the authenticated user
        password: 
          type: string
          description: password of the user.  
        idToken: 
          type: string
          description: This will be the OTP.
        mobile:
          type: string
          description: mobile number of the autheticated user
        email: 
          type: string
          description: email address of the authenticated user
        primaryrole:
          type: array
          description: List of all the roles for the primary tenant
          items:
            $ref: '#/components/schemas/Role'
        additionalroles:
          type: array
          description: array of additional tenantids authorized for the authenticated user
          items:
            $ref: '#/components/schemas/TenantRole'
            
    TenantRole:
      type: object
      description: User role carries the tenant related role information for the user. A user can have multiple roles per tenant based on the need of the tenant. A user may also have multiple roles for multiple tenants.
      properties:
        tenantId: 
          type: string
          description: tenantid for the tenant
        roles:
          type: array
          description: Roles assigned for a particular tenant - array of role codes/names
          items: 
            $ref: "#/components/schemas/Role"
      required:
        - tenantId
        - roles             
            
    Role:
      type: object
      description: |
        minimal representation of the Roles in the system to be carried along in UserInfo with RequestInfo meta data. Actual authorization service to extend this to have more role related attributes
      properties:
        name:  
          type: string
          description: Unique name of the role
          maxLength: 64
        code: 
          type: string
          description: Unique code of the role
          maxLength: 64
        description:
          type: string
          description: brief description of the role
      required:
        - name
          
   
